<?php

namespace Tests\Feature;

use Tests\TestCase;

class UserProfileTest extends TestCase
{
    /**
     * A basic feature test example.
     *
     * @return void
     */
    protected $user;

    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->user = $this->createUser();
    }

    public function test_user_profile_access_for_auth_user()
    {
        $response = $this->actingAs($this->user)->get(route('profile.index'))->assertStatus(200);
        $response->assertViewIs('pages.userProfile');
    }

    public function test_user_profile_access_for_guest()
    {
        $response = $this->get(route('profile.index'))->assertRedirect(route('login.index'));
    }

    public function test_user_profile_updated_successfully()
    {
        $image = $this->createImage('jpg', 500, 800, 1500);
        $response = $this->actingAs($this->user)->patch(route('profile.update', $this->user), [
            'name' => 'new' . $this->user->name,
            'email' => 'new' . $this->user->email,
            'password' => 'newpassword',
            'password_confirmation' => 'newpassword',
            'avatar' => $image,
        ])->assertRedirect();

        $this->assertDatabaseHas('users', [
            'name' => 'new' . $this->user->name,
            'email' => 'new' . $this->user->email,
        ]);
    }

    public function test_user_profile_update_fields_required()
    {
        $image = $this->createImage('jpg', 500, 800, 1500);
        $response = $this->actingAs($this->user)->patch(route('profile.update', $this->user), [
        ])->assertRedirect();

        $response->assertSessionHasErrors(['name', 'email', 'password', 'avatar']);
    }
}
